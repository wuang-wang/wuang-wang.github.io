import{_ as n,o as s,c as a,a as t}from"./app.0a34f0c8.js";const p={},o=t(`<blockquote><p>\u5728\u5904\u7406\u77E2\u91CF\u5316\u6570\u636E\u65F6\uFF0C\u8BB0\u5F55\u4E2D\u5F80\u5F80\u4F1A\u6709\u5F88\u591A\u91CD\u590D\u6570\u636E\uFF0C\u5BF9\u8FDB\u4E00\u6B65\u6570\u636E\u5904\u7406\u5E26\u6765\u8BF8\u591A\u4E0D\u4FBF\u3002\u591A\u4F59\u7684\u6570\u636E\u4E00\u65B9\u9762\u6D6A\u8D39\u4E86\u8F83\u591A\u7684\u5B58\u50A8\u7A7A\u95F4\uFF0C\u53E6\u4E00\u65B9\u9762\u9020\u6210\u6240\u8981\u8868\u8FBE\u7684\u56FE\u5F62\u4E0D\u5149\u6ED1\u6216\u4E0D\u7B26\u5408\u6807\u51C6\u3002\u56E0\u6B64\u8981\u901A\u8FC7\u67D0\u79CD\u89C4\u5219\uFF0C\u5728\u4FDD\u8BC1\u77E2\u91CF\u66F2\u7EBF\u5F62\u72B6\u4E0D\u53D8\u7684\u60C5\u51B5\u4E0B\uFF0C \u6700\u5927\u9650\u5EA6\u5730\u51CF\u5C11\u6570\u636E\u70B9\u4E2A\u6570\uFF0C\u8FD9\u4E2A\u8FC7\u7A0B\u79F0\u4E3A\u62BD\u7A00</p></blockquote><h3 id="\u8D77\u56E0" tabindex="-1"><a class="header-anchor" href="#\u8D77\u56E0" aria-hidden="true">#</a> \u8D77\u56E0</h3><p>\u516C\u53F8\u505A\u7684\u4E00\u6B3E\u5E94\u7528\uFF0C\u8981\u5B9E\u65F6\u663E\u793A\u4EBA\u5458\u4F4D\u7F6E\uFF0C\u5E76\u663E\u793A\u8D70\u8FC7\u7684\u8F68\u8FF9\u8DEF\u7EBF\u3002\u7136\u800C\u8F68\u8FF9\u70B9\u592A\u591A\u4E86\uFF0C\u53EF\u80FD\u4E00\u5929\u7684\u6570\u636E\u5C31\u4F1A\u6709\u51E0\u5343\u751A\u81F3\u51E0\u4E07\u4E2A\uFF0C\u8FC7\u591A\u70B9\u4F1A\u5F71\u54CD\u6027\u80FD\uFF0C\u4E8E\u662F\u60F3\u5230\u4E86\u8F68\u8FF9\u62BD\u7A00</p><h3 id="\u89E3\u51B3\u65B9\u6848" tabindex="-1"><a class="header-anchor" href="#\u89E3\u51B3\u65B9\u6848" aria-hidden="true">#</a> \u89E3\u51B3\u65B9\u6848</h3><p>\u4F7F\u7528<strong>Douglas-Peuker\u7B97\u6CD5</strong>\uFF0C\u4E5F\u79F0<strong>\u62BD\u7A00\u7B97\u6CD5</strong>\u3002</p><ol><li>\u8BE5\u7B97\u6CD5\u662F\u5728\u66F2\u7EBF \u8D77\u59CB\u70B9S\u548C\u7ED3\u675F\u70B9E \u4E4B\u95F4\u8FDE\u63A5\u4E00\u6761\u76F4\u7EBFSE\uFF0C\u8BE5\u76F4\u7EBF\u4E3A\u66F2\u7EBF\u7684\u5F26\uFF1B</li><li>\u9996\u5148\u627E\u5230\u66F2\u7EBF\u4E0A\u79BB\u76F4\u7EBF\u8DDD\u79BB\u6700\u8FDC\u7684\u70B9A\uFF0C\u8BA1\u7B97\u5176\u4E0E\u66F2\u7EBF\u5F26\u7684\u8DDD\u79BBB\uFF1B</li><li>\u6BD4\u8F83\u8BE5\u8DDD\u79BB\u4E0E\u9884\u5148\u7ED9\u5B9A\u7684\u9608\u503Cthreshold\u7684\u5927\u5C0F\uFF0C\u5982\u679C\u5C0F\u4E8Ethreshold\uFF0C\u5219\u8BE5\u76F4\u7EBF\u6BB5\u4F5C\u4E3A\u66F2\u7EBF\u7684\u8FD1\u4F3C\uFF0C\u8BE5\u6BB5\u66F2\u7EBF\u5904\u7406\u5B8C\u6BD5\uFF1B</li><li>\u5982\u679C\u8DDD\u79BB\u5927\u4E8E\u9608\u503C\uFF0C\u5219\u7528A\u5C06\u66F2\u7EBF\u5206\u4E3A\u4E24\u6BB5SA\u548CEA\uFF0C\u5E76\u5206\u522B\u5BF9\u4E24\u6BB5\u53D6\u4FE1\u8FDB\u884C\u7B2C1~3\u7684\u5904\u7406\uFF1B</li><li>\u5F53\u6240\u6709\u66F2\u7EBF\u90FD\u5904\u7406\u5B8C\u6BD5\u65F6\uFF0C\u4F9D\u6B21\u8FDE\u63A5\u5404\u4E2A\u5206\u5272\u70B9\u5F62\u6210\u7684\u6298\u7EBF\uFF0C\u5373\u53EF\u4EE5\u4F5C\u4E3A\u66F2\u7EBF\u7684\u8FD1\u4F3C</li></ol><h3 id="\u4EE3\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u8BA1\u7B97\u4E24\u70B9\u95F4\u8DDD\u79BB</span>
<span class="token keyword">function</span> <span class="token function">calculationDistance</span><span class="token punctuation">(</span><span class="token parameter">point1<span class="token punctuation">,</span> point2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// point1[0]\u6B64\u5904\u7684\u5B57\u6BB5\u8981\u4E0E\u81EA\u5DF1\u5B9A\u4E49\u7684\u4E00\u81F4\uFF0C\u5982\u679C\u662F\u5BF9\u8C61\uFF0C\u53EF\u4EE5\u5982\u4E0B\u64CD\u4F5C\uFF1B\u5982\u679C\u662Fjson\u6570\u636E\u6309\u7167 point1.latitude \u7684\u5F62\u5F0F\u64CD\u4F5C</span>
    <span class="token keyword">const</span> x1 <span class="token operator">=</span> point1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> y1 <span class="token operator">=</span> point1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> x2 <span class="token operator">=</span> point2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> y2 <span class="token operator">=</span> point2<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> xy <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x1 <span class="token operator">-</span> x2<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>x1 <span class="token operator">-</span> x2<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>y1 <span class="token operator">-</span> y2<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>y1 <span class="token operator">-</span> y2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> xy<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8BA1\u7B97\u70B9pX\u5230\u70B9pA\u548CpB\u6240\u786E\u5B9A\u7684\u76F4\u7EBF\u7684\u8DDD\u79BB</span>
<span class="token keyword">function</span> <span class="token function">distToSegment</span><span class="token punctuation">(</span><span class="token parameter">start<span class="token punctuation">,</span> end<span class="token punctuation">,</span> center</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> a <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token function">calculationDistance</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> b <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token function">calculationDistance</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> center<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> c <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token function">calculationDistance</span><span class="token punctuation">(</span>end<span class="token punctuation">,</span> center<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token punctuation">(</span>a <span class="token operator">+</span> b <span class="token operator">+</span> c<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2.0</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> s <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>p <span class="token operator">*</span> <span class="token punctuation">(</span>p <span class="token operator">-</span> a<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>p <span class="token operator">-</span> b<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>p <span class="token operator">-</span> c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>s <span class="token operator">*</span> <span class="token number">2.0</span><span class="token punctuation">)</span> <span class="token operator">/</span> a<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u9012\u5F52\u65B9\u5F0F\u538B\u7F29\u8F68\u8FF9</span>
<span class="token keyword">function</span> <span class="token function">compressLine</span><span class="token punctuation">(</span><span class="token parameter">coordinate<span class="token punctuation">,</span> result<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end<span class="token punctuation">,</span> dMax</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>start <span class="token operator">&lt;</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> maxDist <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> currentIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> startPoint <span class="token operator">=</span> coordinate<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> endPoint <span class="token operator">=</span> coordinate<span class="token punctuation">[</span>end<span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> start <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> end<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> currentDist <span class="token operator">=</span> <span class="token function">distToSegment</span><span class="token punctuation">(</span>startPoint<span class="token punctuation">,</span> endPoint<span class="token punctuation">,</span> coordinate<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>currentDist <span class="token operator">&gt;</span> maxDist<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                maxDist <span class="token operator">=</span> currentDist<span class="token punctuation">;</span>
                currentIndex <span class="token operator">=</span> i<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>maxDist <span class="token operator">&gt;=</span> dMax<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5C06\u5F53\u524D\u70B9\u52A0\u5165\u5230\u8FC7\u6EE4\u6570\u7EC4\u4E2D</span>
            <span class="token comment">// console.warn(&#39;maxDist&#39;+maxDist);</span>
            result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>coordinate<span class="token punctuation">[</span>currentIndex<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u5C06\u539F\u6765\u7684\u7EBF\u6BB5\u4EE5\u5F53\u524D\u70B9\u4E3A\u4E2D\u5FC3\u62C6\u6210\u4E24\u6BB5\uFF0C\u5206\u522B\u8FDB\u884C\u9012\u5F52\u5904\u7406</span>
            <span class="token function">compressLine</span><span class="token punctuation">(</span>coordinate<span class="token punctuation">,</span> result<span class="token punctuation">,</span> start<span class="token punctuation">,</span> currentIndex<span class="token punctuation">,</span> dMax<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">compressLine</span><span class="token punctuation">(</span>coordinate<span class="token punctuation">,</span> result<span class="token punctuation">,</span> currentIndex<span class="token punctuation">,</span> end<span class="token punctuation">,</span> dMax<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4F9B\u8C03\u7528\u7684\u62BD\u7A00\u5165\u53E3\u51FD\u6570</span>
<span class="token doc-comment comment">/**
* coordinate  \u539F\u59CB\u8F68\u8FF9Array&lt;<span class="token punctuation">{</span>latitude,longitude<span class="token punctuation">}</span>&gt;
* dMax  \u5141\u8BB8\u7684\u6700\u5927\u8BEF\u5DEE\u8DDD\u79BB\uFF1B\u9ED8\u8BA4\u4E3A10\uFF0C\u540C\u65F6\u6B64\u503C\u9700\u53C2\u8003 currentDist \u503C\u8FDB\u884C\u8BBE\u7F6E\uFF0C\u4F8B\u5982 currentDist = 0.00000134724232\uFF0C\u5219 dMax \u8BBE\u7F6E\u4E3A 0.000001 \u6BD4\u8F83\u5408\u9002
* resultLatLng  \u62BD\u7A00\u540E\u7684\u6570\u636E
*/</span>

<span class="token keyword">function</span> <span class="token function">douglasPeucker</span><span class="token punctuation">(</span><span class="token parameter">coordinate<span class="token punctuation">,</span> dMax <span class="token operator">=</span> <span class="token number">10</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>coordinate <span class="token operator">||</span> <span class="token operator">!</span><span class="token punctuation">(</span>coordinate<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    coordinate<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        item<span class="token punctuation">.</span>id <span class="token operator">=</span> index<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">compressLine</span><span class="token punctuation">(</span>coordinate<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> coordinate<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> dMax<span class="token punctuation">)</span><span class="token punctuation">;</span>
    result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>coordinate<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>coordinate<span class="token punctuation">[</span>coordinate<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> resultLatLng <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>id <span class="token operator">&lt;</span> b<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>id <span class="token operator">&gt;</span> b<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    resultLatLng<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        item<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> resultLatLng<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8C03\u7528</span>
datas<span class="token operator">=</span> <span class="token function">douglasPeucker</span><span class="token punctuation">(</span>newData<span class="token punctuation">,</span><span class="token number">0.000001</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),e=[o];function c(u,l){return s(),a("div",null,e)}var k=n(p,[["render",c],["__file","MapTrackDrawsThin.html.vue"]]);export{k as default};
