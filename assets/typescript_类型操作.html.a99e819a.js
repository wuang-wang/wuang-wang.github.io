import{_ as n,o as s,c as a,a as e}from"./app.0a34f0c8.js";const p={},t=e(`<p>\u524D\u8A00</p><blockquote><p>TypeScript\u7684\u7C7B\u578B\u7CFB\u7EDF\u5141\u8BB8\u7528\u5176\u4ED6\u7C7B\u578B\u7684\u672F\u8BED\u6765\u8868\u8FBE\u7C7B\u578B\u3002</p></blockquote><ul><li><strong>\u6CDB\u578B\u578B</strong> \uFF1A\u5E26\u53C2\u6570\u7684\u7C7B\u578B</li><li><code>Keyof</code> <strong>\u7C7B\u578B\u64CD\u4F5C\u7B26</strong>\uFF1A <code>keyof</code> \u64CD\u4F5C\u7B26\u521B\u5EFA\u65B0\u7C7B\u578B</li><li><code>Typeof</code> <strong>\u7C7B\u578B\u64CD\u4F5C\u7B26</strong> \uFF1A \u4F7F\u7528 <code>typeof</code> \u64CD\u4F5C\u7B26\u6765\u521B\u5EFA\u65B0\u7684\u7C7B\u578B</li><li><strong>\u7D22\u5F15\u8BBF\u95EE\u7C7B\u578B</strong> \uFF1A\u4F7F\u7528 <code>Type[&#39;a&#39;]</code> \u8BED\u6CD5\u6765\u8BBF\u95EE\u4E00\u4E2A\u7C7B\u578B\u7684\u5B50\u96C6</li><li><strong>\u6761\u4EF6\u7C7B\u578B</strong> \uFF1A\u5728\u7C7B\u578B\u7CFB\u7EDF\u4E2D\u50CF if \u8BED\u53E5\u4E00\u6837\u884C\u4E8B\u7684\u7C7B\u578B</li><li><strong>\u6620\u5C04\u7C7B\u578B</strong> \uFF1A\u901A\u8FC7\u6620\u5C04\u73B0\u6709\u7C7B\u578B\u4E2D\u7684\u6BCF\u4E2A\u5C5E\u6027\u6765\u521B\u5EFA\u7C7B\u578B</li><li><strong>\u6A21\u677F\u5B57\u9762\u91CF\u7C7B\u578B</strong> \uFF1A\u901A\u8FC7\u6A21\u677F\u5B57\u9762\u5B57\u7B26\u4E32\u6539\u53D8\u5C5E\u6027\u7684\u6620\u5C04\u7C7B\u578B</li></ul><h2 id="\u6CDB\u578B" tabindex="-1"><a class="header-anchor" href="#\u6CDB\u578B" aria-hidden="true">#</a> \u6CDB\u578B</h2><h3 id="\u{1F4CC}\u6CDB\u578B\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u{1F4CC}\u6CDB\u578B\u7C7B\u578B" aria-hidden="true">#</a> \u{1F4CC}\u6CDB\u578B\u7C7B\u578B</h3><p>\u6CDB\u578B\u51FD\u6570\u7684\u7C7B\u578B\u4E0E\u975E\u6CDB\u578B\u51FD\u6570\u7684\u7C7B\u578B\u4E00\u6837\uFF0C\u7C7B\u578B\u53C2\u6570\u5217\u5728\u524D\u9762\uFF0C\u4E0E\u51FD\u6570\u58F0\u660E\u7C7B\u4F3C\uFF1A</p><ul><li>\u6CDB\u578B\u51FD\u6570\u7684\u7C7B\u578B\u683C\u5F0F\uFF1A<code>&lt;Type&gt;(param:TypeToParamType) =&gt; TypeToReturnType</code></li><li>\u666E\u901A\u51FD\u6570\u7C7B\u578B\u683C\u5F0F\uFF1A<code>(param:paramType) =&gt; returnType</code></li></ul><p>\u5148\u770B\u4E00\u4E2A\u6211\u4EEC\u4E4B\u524D\u5B9A\u4E49\u8FC7\u7684\u4E00\u4E2A\u901A\u7528\u51FD\u6570\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">getFirstElement</span><span class="token generic class-name"><span class="token operator">&lt;</span>Type<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arr<span class="token operator">:</span> Type<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> Type <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B83\u7684\u7C7B\u578B\u5C31\u662F<code>&lt;Type&gt;(arr: Type[]) =&gt; Type | undefined</code>\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5C06\u5B83\u8D4B\u503C\u7ED9\u540C\u7C7B\u578B\u7684\u51FD\u6570<code>fn</code>\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> fn<span class="token operator">:</span> <span class="token operator">&lt;</span>Type<span class="token operator">&gt;</span><span class="token punctuation">(</span>arr<span class="token operator">:</span> Type<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Type <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token operator">=</span> getFirstElement<span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token generic-function"><span class="token function">fn</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u4E5F\u53EF\u4EE5\u4E3A\u7C7B\u578B\u4E2D\u7684\u901A\u7528\u7C7B\u578B\u53C2\u6570\u4F7F\u7528\u4E00\u4E2A\u4E0D\u540C\u7684\u540D\u5B57\uFF0C\u53EA\u8981\u7C7B\u578B\u53D8\u91CF\u7684\u6570\u91CF\u548C\u7C7B\u578B\u53D8\u91CF\u7684\u4F7F\u7528\u65B9\u5F0F\u4E00\u81F4\u5373\u53EF\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> fn<span class="token operator">:</span> <span class="token operator">&lt;</span>FnType<span class="token operator">&gt;</span><span class="token punctuation">(</span>fnArr<span class="token operator">:</span> FnType<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> FnType <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token operator">=</span> getFirstElement<span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token generic-function"><span class="token function">fn</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u4E5F\u53EF\u4EE5\u628A\u6CDB\u578B\u5199\u6210\u4E00\u4E2A<strong>\u5BF9\u8C61\u5B57\u9762\u7C7B\u578B</strong>\u7684\u8C03\u7528\u7B7E\u540D\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> fn<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token operator">&lt;</span>FnType<span class="token operator">&gt;</span><span class="token punctuation">(</span>fnArr<span class="token operator">:</span> FnType<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> FnType <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token punctuation">}</span> <span class="token operator">=</span> getFirstElement<span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token generic-function"><span class="token function">fn</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u65F6\u53EF\u4EE5\u5C06\u5BF9\u8C61\u5B57\u9762\u7C7B\u578B\u79FB\u5230\u4E00\u4E2A<strong>\u63A5\u53E3</strong>\u4E2D\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Ifn</span> <span class="token punctuation">{</span>
    <span class="token operator">&lt;</span>FnType<span class="token operator">&gt;</span><span class="token punctuation">(</span>fnArr<span class="token operator">:</span> FnType<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> FnType <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> fn<span class="token operator">:</span> Ifn <span class="token operator">=</span> getFirstElement<span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token generic-function"><span class="token function">fn</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5728\u4E00\u4E9B\u60C5\u51B5\u4E0B\uFF0C\u6211\u4EEC\u8FD8\u53EF\u4EE5\u5C06\u901A\u7528\u53C2\u6570\u79FB\u5230\u6574\u4E2A\u63A5\u53E3\u7684\u53C2\u6570\u4E0A\uFF0C\u8FD9\u4F7F\u5F97\u6211\u4EEC\u53EF\u4EE5\u770B\u5230\u6211\u4EEC\u7684\u6CDB\u578B\u662F\u4EC0\u4E48\u7C7B\u578B\uFF08\u4F8B\u5982<code>Ifn&lt;string&gt;</code>\u800C\u4E0D\u4EC5\u4EC5\u662F<code>Ifn</code>\uFF09\uFF0C\u4F7F\u5F97\u7C7B\u578B\u53C2\u6570\u5BF9\u63A5\u53E3\u7684\u6240\u6709\u5176\u5B83\u6210\u5458\u53EF\u89C1\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>  <span class="token keyword">interface</span> <span class="token class-name">Ifn<span class="token operator">&lt;</span>FnType<span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
      <span class="token punctuation">(</span>fnArr<span class="token operator">:</span> FnType<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> FnType <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> strFn<span class="token operator">:</span> Ifn<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span> <span class="token operator">=</span> getFirstElement<span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">strFn</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">strFn</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// err:\u4E0D\u80FD\u5C06\u7C7B\u578B\u201Cnumber\u201D\u5206\u914D\u7ED9\u7C7B\u578B\u201Cstring\u201D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token operator">&gt;</span>\u6CE8\u610F\uFF1A\u8FD9\u91CC\u7684\u4F8B\u5B50\u5DF2\u7ECF\u53D8\u4E86\uFF0C\u4E0D\u518D\u662F\u7B80\u5355\u7684\u5C06<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">getFirstElement</span><span class="token template-punctuation string">\`</span></span>\u51FD\u6570\u76F4\u63A5\u8D4B\u503C\u7ED9\u53E6\u4E00\u4E2A\u51FD\u6570\uFF0C\u800C\u662F\u5C06\u7C7B\u578B\u53C2\u6570\u4E3A<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">string</span><span class="token template-punctuation string">\`</span></span>\u7684<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">getFirstElement</span><span class="token template-punctuation string">\`</span></span>\u51FD\u6570\u8D4B\u503C\u7ED9<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">strFn</span><span class="token template-punctuation string">\`</span></span>

\u4E0A\u8FF0<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">strFn</span><span class="token template-punctuation string">\`</span></span>\u76F8\u5F53\u4E8E<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">fn&lt;string&gt;</span><span class="token template-punctuation string">\`</span></span>\uFF1A
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>  <span class="token keyword">interface</span> <span class="token class-name">Ifn</span> <span class="token punctuation">{</span>
      <span class="token operator">&lt;</span>FnType<span class="token operator">&gt;</span><span class="token punctuation">(</span>fnArr<span class="token operator">:</span> FnType<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> FnType <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> fn<span class="token operator">:</span> Ifn <span class="token operator">=</span> getFirstElement<span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token generic-function"><span class="token function">fn</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u{1F4CC}\u6CDB\u578B\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u{1F4CC}\u6CDB\u578B\u7C7B" aria-hidden="true">#</a> \u{1F4CC}\u6CDB\u578B\u7C7B</h3><p>\u6CDB\u578B\u7C7B\u5728\u7C7B\u7684\u540D\u5B57\u540E\u9762\u6709\u4E00\u4E2A\u89D2\u62EC\u53F7\uFF08<code>&lt;&gt;</code>\uFF09\u4E2D\u7684\u6CDB\u578B\u53C2\u6570\u5217\u8868\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Add<span class="token operator">&lt;</span>AddType<span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
    initVal<span class="token operator">:</span> AddType<span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
    add<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token operator">:</span> AddType<span class="token punctuation">,</span> y<span class="token operator">:</span> AddType<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> AddType<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> myNumber <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Add<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
myNumber<span class="token punctuation">.</span>initVal <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
myNumber<span class="token punctuation">.</span><span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myNumber<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>myNumber<span class="token punctuation">.</span>initVal<span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 19</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> myStr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Add<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
myStr<span class="token punctuation">.</span>initVal <span class="token operator">=</span> <span class="token string">&quot;Ailjx&quot;</span><span class="token punctuation">;</span>
myStr<span class="token punctuation">.</span><span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myStr<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>myStr<span class="token punctuation">.</span>initVal<span class="token punctuation">,</span> <span class="token string">&quot; OK&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Ailjx OK</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5C31\u50CF\u63A5\u53E3\u4E00\u6837\uFF0C\u628A\u7C7B\u578B\u53C2\u6570\u653E\u5728\u7C7B\u672C\u8EAB\uFF0C\u53EF\u4EE5\u8BA9\u6211\u4EEC\u786E\u4FDD\u7C7B\u7684\u6240\u6709\u5C5E\u6027\u90FD\u4E0E\u76F8\u540C\u7684\u7C7B\u578B\u4E00\u8D77\u5DE5\u4F5C\u3002</p><blockquote><p><strong>\u6CE8\u610F</strong>\uFF1A\u4E00\u4E2A\u7C7B\u7684\u7C7B\u578B\u6709\u4E24\u4E2A\u65B9\u9762\uFF1A<strong>\u9759\u6001</strong>\u65B9\u9762\u548C<strong>\u5B9E\u4F8B</strong>\u65B9\u9762\u3002\u901A\u7528\u7C7B\u53EA\u5728\u5176\u5B9E\u4F8B\u4FA7\u800C\u975E\u9759\u6001\u4FA7\u5177\u6709\u901A\u7528\u6027\uFF0C\u6240\u4EE5\u5728\u4F7F\u7528\u7C7B\u65F6\uFF0C<strong>\u9759\u6001\u6210\u5458\u4E0D\u80FD\u4F7F\u7528\u7C7B\u7684\u7C7B\u578B\u53C2\u6570</strong>\u3002</p></blockquote><h3 id="\u{1F4CC}\u6CDB\u578B\u7EA6\u675F" tabindex="-1"><a class="header-anchor" href="#\u{1F4CC}\u6CDB\u578B\u7EA6\u675F" aria-hidden="true">#</a> \u{1F4CC}\u6CDB\u578B\u7EA6\u675F</h3><p><strong>\u5728\u6CDB\u578B\u7EA6\u675F\u4E2D\u4F7F\u7528\u7C7B\u578B\u53C2\u6570</strong></p><p>\u4F60\u53EF\u4EE5\u58F0\u660E\u4E00\u4E2A\u53D7\u53E6\u4E00\u4E2A\u7C7B\u578B\u53C2\u6570\u7EA6\u675F\u7684\u7C7B\u578B\u53C2\u6570\u3002</p><p>\u4F8B\u5982\uFF0C\u6211\u4EEC\u60F3\u4ECE\u4E00\u4E2A\u7ED9\u5B9A\u540D\u79F0\u7684\u5BF9\u8C61\u4E2D\u83B7\u53D6\u4E00\u4E2A\u5C5E\u6027\u3002\u6211\u4EEC\u60F3\u786E\u4FDD\u6211\u4EEC\u4E0D\u4F1A\u610F\u5916\u5730\u83B7\u53D6\u4E00\u4E2A\u4E0D\u5B58\u5728\u4E8E <code>obj</code> \u4E0A\u7684\u5C5E\u6027\uFF0C\u6240\u4EE5\u6211\u4EEC\u8981\u5728\u8FD9\u4E24\u79CD\u7C7B\u578B\u4E4B\u95F4\u653E\u7F6E\u4E00\u4E2A\u7EA6\u675F\u6761\u4EF6\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">getProperty</span><span class="token generic class-name"><span class="token operator">&lt;</span>Type<span class="token punctuation">,</span> Key <span class="token keyword">extends</span> <span class="token keyword">keyof</span> Type<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>obj<span class="token operator">:</span> Type<span class="token punctuation">,</span> key<span class="token operator">:</span> Key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>keyof</code> \u8FD0\u7B97\u7B26\u63A5\u6536\u4E00\u4E2A\u5BF9\u8C61\u7C7B\u578B\uFF0C\u5E76\u4EA7\u751F\u5176\u952E\u7684\u5B57\u7B26\u4E32\u6216\u6570\u5B57\u5B57\u9762\u8054\u5408\uFF0C\u4E0B\u9762\u4F1A\u8BE6\u7EC6\u8BB2\u89E3</p></blockquote><h3 id="\u{1F4CC}\u5728\u6CDB\u578B\u4E2D\u4F7F\u7528\u7C7B\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u{1F4CC}\u5728\u6CDB\u578B\u4E2D\u4F7F\u7528\u7C7B\u7C7B\u578B" aria-hidden="true">#</a> \u{1F4CC}\u5728\u6CDB\u578B\u4E2D\u4F7F\u7528\u7C7B\u7C7B\u578B</h3><p>\u5728<code>TypeScript</code>\u4E2D\u4F7F\u7528\u6CDB\u578B\u521B\u5EFA\u5DE5\u5382\u65F6\uFF0C\u6709\u5FC5\u8981\u901A\u8FC7\u5176\u6784\u9020\u51FD\u6570\u6765\u5F15\u7528\u7C7B\u7684\u7C7B\u578B\uFF0C\u6BD4\u5982\u8BF4\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">create</span><span class="token generic class-name"><span class="token operator">&lt;</span>Type<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>c<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Type<span class="token punctuation">)</span><span class="token operator">:</span> Type <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>create</code>\u51FD\u6570\u4EE3\u8868\u63A5\u6536\u4E00\u4E2A\u6784\u9020\u51FD\u6570\uFF0C\u5E76\u8FD4\u56DE\u5176\u5B9E\u4F8B</p><p>\u53C2\u6570<code>c</code>\u7684\u7C7B\u578B\u4F7F\u7528\u7684\u662F<strong>\u6784\u9020\u7B7E\u540D</strong>\uFF0C\u8868\u793A\u5176\u63A5\u6536\u4E00\u4E2A\u6784\u9020\u51FD\u6570\uFF0C\u5E76\u4E14\u8BE5\u6784\u9020\u51FD\u6570\u5B9E\u4F8B\u7684\u7C7B\u578B\uFF08<code>Type</code>\uFF09\u88AB\u5F53\u4F5C\u4E86<code>create</code>\u51FD\u6570\u7684\u7C7B\u578B\u53C2\u6570\u5E76\u5728\u5176\u5B83\u5730\u65B9\u8FDB\u884C\u4F7F\u7528\uFF0C\u5982<code>create</code>\u7684\u8FD4\u56DE\u503C\u7C7B\u578B\u5C31\u662F\u5F15\u7528\u4E86<code>Type</code></p><p>\u4E00\u4E2A\u66F4\u9AD8\u7EA7\u7684\u4F8B\u5B50\uFF0C\u4F7F\u7528\u539F\u578B\u5C5E\u6027\u6765\u63A8\u65AD\u548C\u7EA6\u675F\u7C7B\u7C7B\u578B\u7684\u6784\u9020\u51FD\u6570\u548C\u5B9E\u4F8B\u65B9\u4E4B\u95F4\u7684\u5173\u7CFB\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
    numLegs<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Bee</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&quot;Bee&quot;</span><span class="token punctuation">;</span>
    <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Lion</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&quot;Lion&quot;</span><span class="token punctuation">;</span>
    <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">createInstance</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">A</span> <span class="token keyword">extends</span> Animal<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>c<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">A</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">A</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">createInstance</span><span class="token punctuation">(</span>Bee<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Bee</span>
<span class="token function">createInstance</span><span class="token punctuation">(</span>Lion<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Lion</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u7684<code>createInstance</code>\u51FD\u6570\u8868\u793A\u53EA\u80FD\u63A5\u6536\u4E00\u4E2A\u5B9E\u4F8B\u7C7B\u578B\u53D7\u9650\u4E8E<code>Animal</code>\u7684\u6784\u9020\u51FD\u6570\uFF0C\u5E76\u8FD4\u56DE\u5176\u5B9E\u4F8B</p><h2 id="keyof-\u7C7B\u578B\u64CD\u4F5C\u7B26" tabindex="-1"><a class="header-anchor" href="#keyof-\u7C7B\u578B\u64CD\u4F5C\u7B26" aria-hidden="true">#</a> keyof \u7C7B\u578B\u64CD\u4F5C\u7B26</h2><p><code>keyof</code> \u8FD0\u7B97\u7B26\u63A5\u6536\u4E00\u4E2A\u5BF9\u8C61\u7C7B\u578B\uFF0C\u5E76\u4EA7\u751F\u5176<strong>\u952E</strong>\u7684\u5B57\u7B26\u4E32\u6216\u6570\u5B57\u5B57\u9762\u8054\u5408\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ObjType</span> <span class="token operator">=</span> <span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> y<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> p1<span class="token operator">:</span> <span class="token keyword">keyof</span> ObjType <span class="token operator">=</span> <span class="token string">&quot;x&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// \u76F8\u5F53\u4E8E</span>
<span class="token comment">// const p1: &quot;x&quot; | &quot;y&quot; = &quot;x&quot;;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u8BE5\u7C7B\u578B\u6709\u4E00\u4E2A\u5B57\u7B26\u4E32\u6216\u6570\u5B57<strong>\u7D22\u5F15\u7B7E\u540D</strong>\uFF0C <code>keyof</code> \u5C06\u8FD4\u56DE\u8FD9\u4E9B\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Arrayish</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>n<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">unknown</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> <span class="token keyword">keyof</span> Arrayish<span class="token punctuation">;</span> <span class="token comment">// A\u4E3A number</span>
<span class="token keyword">const</span> a<span class="token operator">:</span> <span class="token constant">A</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">Mapish</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>k<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">M</span></span> <span class="token operator">=</span> <span class="token keyword">keyof</span> Mapish<span class="token punctuation">;</span> <span class="token comment">// M\u4E3A string|number</span>
<span class="token keyword">const</span> m<span class="token operator">:</span> <span class="token constant">M</span> <span class="token operator">=</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> m2<span class="token operator">:</span> <span class="token constant">M</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>\u6CE8\u610F</strong>\uFF1A\u5728\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\uFF0C <code>M</code> \u662F <code>string|number</code> \u2014\u2014\u8FD9\u662F\u56E0\u4E3A<code>JavaScript</code>\u5BF9\u8C61\u7684\u952E\u603B\u662F\u88AB\u5F3A\u5236\u4E3A\u5B57\u7B26\u4E32\uFF0C\u6240\u4EE5 <code>obj[0]</code> \u603B\u662F\u4E0E<code>obj[&quot;0&quot;]</code> \u76F8\u540C\u3002</p></blockquote><h2 id="typeof-\u7C7B\u578B\u64CD\u4F5C\u7B26" tabindex="-1"><a class="header-anchor" href="#typeof-\u7C7B\u578B\u64CD\u4F5C\u7B26" aria-hidden="true">#</a> typeof \u7C7B\u578B\u64CD\u4F5C\u7B26</h2><p>\u5728<code>JavaScript</code>\u4E2D\u53EF\u4EE5\u4F7F\u7528<code>typeof</code>\u64CD\u4F5C\u7B26\u83B7\u53D6\u67D0\u4E00\u53D8\u91CF\u7684\u7C7B\u578B\uFF0C\u5728<code>TypeScript</code>\u4E2D\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u5B83\u6765\u5728\u7C7B\u578B\u4E0A\u4E0B\u6587\u4E2D\u5F15\u7528\u4E00\u4E2A\u53D8\u91CF\u6216\u5C5E\u6027\u7684\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> n<span class="token operator">:</span> <span class="token keyword">typeof</span> s<span class="token punctuation">;</span> <span class="token comment">// n\u7C7B\u578B\u4E3Astring</span>
n <span class="token operator">=</span> <span class="token string">&quot;world&quot;</span><span class="token punctuation">;</span>
n <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span> <span class="token comment">// err:\u4E0D\u80FD\u5C06\u7C7B\u578B\u201Cnumber\u201D\u5206\u914D\u7ED9\u7C7B\u578B\u201Cstring\u201D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED3\u5408\u5176\u4ED6\u7C7B\u578B\u64CD\u4F5C\u7B26\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528<code>typeof</code>\u6765\u65B9\u4FBF\u5730\u8868\u8FBE\u8BB8\u591A\u6A21\u5F0F\u3002</p><p>\u4F8B\u5982\u6211\u4EEC\u60F3\u8981\u83B7\u53D6\u51FD\u6570\u8FD4\u56DE\u503C\u7684\u7C7B\u578B\uFF1A</p><ul><li><code>TypeScript</code>\u4E2D\u5185\u7F6E\u7684\u7C7B\u578B<code>ReturnType&lt;T&gt;</code> \u63A5\u6536\u4E00\u4E2A\u51FD\u6570\u7C7B\u578B\u5E76\u4EA7\u751F\u5176\u8FD4\u56DE\u7C7B\u578B\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>  <span class="token keyword">type</span> <span class="token class-name">Predicate</span> <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  <span class="token keyword">type</span> <span class="token class-name"><span class="token constant">K</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span>Predicate<span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// k\u4E3Aboolean</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>\u5982\u679C\u76F4\u63A5\u5728\u4E00\u4E2A\u51FD\u6570\u540D\u4E0A\u4F7F\u7528 <code>ReturnType</code> \uFF0C\u6211\u4EEC\u4F1A\u770B\u5230\u4E00\u4E2A\u6307\u793A\u6027\u7684\u9519\u8BEF</p><p>\u4E3A\u4E86\u6307\u4EE3\u503C<code>f</code>\u7684\u7C7B\u578B\uFF0C\u6211\u4EEC\u4F7F\u7528<code>typeof</code></p></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>  <span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">type</span> <span class="token class-name"><span class="token constant">P</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> f<span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// P\u4E3A{ x: number, y: number }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u53EA\u6709\u5728\u6807\u8BC6\u7B26\uFF08\u5373\u53D8\u91CF\u540D\uFF09\u6216\u5176\u5C5E\u6027\u4E0A\u4F7F\u7528<code>typeof</code>\u662F\u5408\u6CD5\u7684</p></blockquote><h2 id="\u7D22\u5F15\u8BBF\u95EE\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u7D22\u5F15\u8BBF\u95EE\u7C7B\u578B" aria-hidden="true">#</a> \u7D22\u5F15\u8BBF\u95EE\u7C7B\u578B</h2><p>\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2A\u7D22\u5F15\u8BBF\u95EE\u7C7B\u578B\u6765\u67E5\u8BE2\u4E00\u4E2A\u7C7B\u578B\u4E0A\u7684\u7279\u5B9A\u5C5E\u6027\u7684\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Person</span> <span class="token operator">=</span> <span class="token punctuation">{</span> age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> alive<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">Age</span> <span class="token operator">=</span> Person<span class="token punctuation">[</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// Age\u7C7B\u578B\u4E3Anumber</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD8\u53EF\u4EE5\u914D\u5408<strong>\u8054\u5408\u7C7B\u578B</strong> <code>unions</code>\u3001<code>keyof</code> \u6216\u8005\u5176\u4ED6\u7C7B\u578B\u8FDB\u884C\u4F7F\u7528\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    alive<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// type I1 = string | number</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">I1</span></span> <span class="token operator">=</span> Person<span class="token punctuation">[</span><span class="token string">&quot;age&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> i11<span class="token operator">:</span> <span class="token constant">I1</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> i12<span class="token operator">:</span> <span class="token constant">I1</span> <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// type I2 = string | number | boolean</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">I2</span></span> <span class="token operator">=</span> Person<span class="token punctuation">[</span><span class="token keyword">keyof</span> Person<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> i21<span class="token operator">:</span> <span class="token constant">I2</span> <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> i22<span class="token operator">:</span> <span class="token constant">I2</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> i23<span class="token operator">:</span> <span class="token constant">I2</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5C06\u7D22\u5F15\u8BBF\u95EE\u7C7B\u578B\u548C<code>typeof</code> \uFF0C<code>number</code> \u7ED3\u5408\u8D77\u6765\uFF0C\u65B9\u4FBF\u5730\u83B7\u53D6\u4E00\u4E2A\u6570\u7EC4<strong>\u5B57\u9762</strong>\u7684\u5143\u7D20\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> MyArray <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&quot;Alice&quot;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">15</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&quot;Bob&quot;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">23</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&quot;Eve&quot;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">38</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">/* type Person = {
    name: string;
    age: number;
    } */</span>
<span class="token keyword">type</span> <span class="token class-name">Person</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> MyArray<span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> p<span class="token operator">:</span> Person <span class="token operator">=</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&quot;xiaoqian&quot;</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">11</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// type Age = number</span>
<span class="token keyword">type</span> <span class="token class-name">Age</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> MyArray<span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> age<span class="token operator">:</span> Age <span class="token operator">=</span> <span class="token number">11</span><span class="token punctuation">;</span>

<span class="token comment">// \u6216\u8005</span>
<span class="token comment">// type Age2 = number</span>
<span class="token keyword">type</span> <span class="token class-name">Age2</span> <span class="token operator">=</span> Person<span class="token punctuation">[</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> age2<span class="token operator">:</span> Age2 <span class="token operator">=</span> <span class="token number">11</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6CE8\u610F\uFF1A</strong></p><ul><li>\u5728\u7D22\u5F15\u65F6\u53EA\u80FD\u4F7F\u7528\u7C7B\u578B\u5F15\u7528\uFF0C\u4E0D\u80FD\u4F7F\u7528\u53D8\u91CF\u5F15\u7528\uFF1A</li><li>\u53EF\u4EE5\u4F7F\u7528\u7C7B\u578B\u522B\u540D\u6765\u5B9E\u73B0\u7C7B\u4F3C\u98CE\u683C\u7684\u91CD\u6784\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>  <span class="token keyword">type</span> <span class="token class-name">key</span> <span class="token operator">=</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">type</span> <span class="token class-name">Age</span> <span class="token operator">=</span> Person<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6761\u4EF6\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u6761\u4EF6\u7C7B\u578B" aria-hidden="true">#</a> \u6761\u4EF6\u7C7B\u578B</h2><p>\u5728<code>TypeScript</code>\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u4E09\u5143\u8868\u8FBE\u5F0F\u6765\u5224\u65AD\u4E00\u4E2A\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">Dog</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// type Example1 = number</span>
<span class="token keyword">type</span> <span class="token class-name">Example1</span> <span class="token operator">=</span> Dog <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token operator">?</span> <span class="token builtin">number</span> <span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token comment">// type Example2 = string</span>
<span class="token keyword">type</span> <span class="token class-name">Example2</span> <span class="token operator">=</span> RegExp <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token operator">?</span> <span class="token builtin">number</span> <span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6761\u4EF6\u7C7B\u578B\u8868\u8FBE\u5F0F\u662F\u901A\u8FC7<code>extends</code>\u8FDB\u884C\u7EA6\u675F\u548C\u5224\u65AD</p><h3 id="\u{1F4CC}\u914D\u5408\u6CDB\u578B\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u{1F4CC}\u914D\u5408\u6CDB\u578B\u4F7F\u7528" aria-hidden="true">#</a> \u{1F4CC}\u914D\u5408\u6CDB\u578B\u4F7F\u7528</h3><p>\u5148\u770B\u4E00\u4E2A\u7B80\u5355\u7684\u4F8B\u5B50\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Flatten<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">any</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token comment">// \u63D0\u53D6\u51FA\u5143\u7D20\u7C7B\u578B\u3002</span>
<span class="token comment">// type Str = string</span>
<span class="token keyword">type</span> <span class="token class-name">Str</span> <span class="token operator">=</span> Flatten<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">// \u5355\u72EC\u4E00\u4E2A\u7C7B\u578B\u3002</span>
<span class="token comment">// type Num = number</span>
<span class="token keyword">type</span> <span class="token class-name">Num</span> <span class="token operator">=</span> Flatten<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53 <code>Flatten</code> \u88AB\u8D4B\u4E88\u4E00\u4E2A\u6570\u7EC4\u7C7B\u578B\u65F6\uFF0C\u5B83\u4F7F\u7528\u4E00\u4E2A\u5E26\u6709\u6570\u5B57\u7684\u7D22\u5F15\u8BBF\u95EE\u6765\u83B7\u53D6\u6570\u7EC4\u7684\u5143\u7D20\u7C7B\u578B\u3002\u5426\u5219\uFF0C\u5B83\u53EA\u662F\u8FD4\u56DE\u5B83\u88AB\u8D4B\u4E88\u7684\u7C7B\u578B\u3002</p><p>\u5728\u770B\u4E00\u4E2A\u590D\u6742\u7684\u4F8B\u5B50\uFF0C\u5B9E\u73B0\u4E00\u4E2A\u83B7\u53D6<code>id</code>\u6216<code>name</code>\u7684\u5BF9\u8C61\u683C\u5F0F\u7684\u51FD\u6570<code>getIdOrNameObj</code>\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">IId</span> <span class="token punctuation">{</span>
    id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">IName</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u6761\u4EF6\u7C7B\u578B\u914D\u5408\u6CDB\u578B\u5BF9\u7C7B\u578B\u8FDB\u884C\u5224\u65AD\u548C\u9009\u62E9</span>
<span class="token keyword">type</span> <span class="token class-name">IdOrName<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">number</span></span> <span class="token operator">?</span> IId <span class="token operator">:</span> IName<span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">getIdOrNameObj</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>idOrName<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> IdOrName<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> idOrName <span class="token operator">===</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
            id<span class="token operator">:</span> idOrName<span class="token punctuation">,</span>
        <span class="token punctuation">}</span> <span class="token keyword">as</span> IdOrName<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
            name<span class="token operator">:</span> idOrName<span class="token punctuation">,</span>
        <span class="token punctuation">}</span> <span class="token keyword">as</span> IdOrName<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> myId <span class="token operator">=</span> <span class="token function">getIdOrNameObj</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// myId\u7C7B\u578B\u4E3AIId</span>
<span class="token keyword">const</span> myName <span class="token operator">=</span> <span class="token function">getIdOrNameObj</span><span class="token punctuation">(</span><span class="token string">&quot;Ailjx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// myName\u7C7B\u578B\u4E3AIName</span>
<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token template-punctuation string">\`</span></span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">### \u7C7B\u578B\u63A8\u7406
\u5728\u6761\u4EF6\u7C7B\u578B\u7684 </span><span class="token template-punctuation string">\`</span></span><span class="token keyword">extends</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u5B50\u53E5\u4E2D\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528 </span><span class="token template-punctuation string">\`</span></span><span class="token keyword">infer</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"> \u58F0\u660E\u6765\u63A8\u65AD\u5143\u7D20\u7C7B\u578B
&gt; </span><span class="token template-punctuation string">\`</span></span><span class="token keyword">infer</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"> \u58F0\u660E\u53EA\u80FD\u5728\u6761\u4EF6\u7C7B\u578B\u7684 </span><span class="token template-punctuation string">\`</span></span><span class="token keyword">extends</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u5B50\u53E5\u4E2D\u4F7F\u7528

\u4F8B\u5982\uFF0C\u6211\u4EEC\u4F7F\u7528</span><span class="token template-punctuation string">\`</span></span><span class="token keyword">infer</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"> \u5173\u952E\u5B57\u6765\u6539\u5199\u4E0A\u9762\u7684</span><span class="token template-punctuation string">\`</span></span>Flatten<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\uFF1A
</span><span class="token template-punctuation string">\`</span></span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token template-punctuation string">\`</span></span>typescript
<span class="token keyword">type</span> <span class="token class-name">Flatten<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token keyword">infer</span> Item<span class="token operator">&gt;</span></span> <span class="token operator">?</span> Item <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>

<span class="token comment">// type Str = string</span>
<span class="token keyword">type</span> <span class="token class-name">Str</span> <span class="token operator">=</span> Flatten<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">// type Str = number</span>
<span class="token keyword">type</span> <span class="token class-name">Num</span> <span class="token operator">=</span> Flatten<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u8FD9\u91CC\u4F7F\u7528 <code>infer</code> \u5173\u952E\u5B57\u6765\u58F0\u660E\u6027\u5730\u5F15\u5165\u4E00\u4E2A\u540D\u4E3A <code>Item</code> \u7684\u65B0\u7684\u901A\u7528\u7C7B\u578B\u53D8\u91CF</p></blockquote><blockquote><p>\u8FD9\u91CC<code>infer Item</code>\u76F8\u5F53\u4E8E\u4E00\u4E2A\u5360\u4F4D\uFF0C\u5B83\u6682\u65F6\u4EE3\u8868<code>Array</code>\u4E2D\u5143\u7D20\u7684\u7C7B\u578B\uFF0C\u5F53<code>Flatten</code>\u7C7B\u578B\u53C2\u6570\u88AB\u8D4B\u503C\u4E3A\u6570\u7EC4\u540E\uFF0C<code>TypeScript</code>\u5C31\u4F1A\u81EA\u52A8\u63A8\u65AD\u51FA<code>extends</code>\u8BED\u53E5\u4E2D<code>Array</code>\u4E2D\u5143\u7D20\u7684\u7C7B\u578B\uFF0C\u8FD9\u65F6<code>infer Item</code>\u8FD9\u4E2A\u5360\u4F4D\u5C31\u6307\u5411\u4E86\u6570\u7EC4\u5143\u7D20\u7684\u7C7B\u578B\uFF0C\u4E4B\u540E\u5C31\u80FD\u76F4\u63A5\u4F7F\u7528<code>Item</code>\u6765\u4EE3\u6307\u6570\u7EC4\u5143\u7D20\u7684\u7C7B\u578B\u4E86</p></blockquote><blockquote><p>\u8FD9\u4F7F\u5F97\u6211\u4EEC\u4E0D\u7528\u518D\u4F7F\u7528\u7D22\u5F15\u8BBF\u95EE\u7C7B\u578B<code>T[number]</code> &quot;\u624B\u52A8 &quot;\u63D0\u53D6\u6570\u7EC4\u5143\u7D20\u7684\u7C7B\u578B\u4E86</p></blockquote><p>\u4F7F\u7528 <code>infer</code> \u5173\u952E\u5B57\u4ECE\u51FD\u6570\u7C7B\u578B\u4E2D\u63D0\u53D6\u51FA\u8FD4\u56DE\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u5F53GetReturnType\u63A5\u6536\u7C7B\u578B\u4E3A\u51FD\u6570\u7B7E\u540D\u65F6\u8FD4\u56DE\u51FD\u6570\u8FD4\u56DE\u503C\u7C7B\u578B\uFF0C\u5426\u8005\u76F4\u63A5\u8FD4\u56DE\u63A5\u6536\u7684\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name">GetReturnType<span class="token operator">&lt;</span>Type<span class="token operator">&gt;</span></span> <span class="token operator">=</span> Type <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">infer</span> Return
    <span class="token operator">?</span> Return
    <span class="token operator">:</span> Type<span class="token punctuation">;</span>

<span class="token comment">// type Num = number</span>
<span class="token keyword">type</span> <span class="token class-name">Num</span> <span class="token operator">=</span> GetReturnType<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">// type Str = string</span>
<span class="token keyword">type</span> <span class="token class-name">Str</span> <span class="token operator">=</span> GetReturnType<span class="token operator">&lt;</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">// type Bools = boolean[]</span>
<span class="token keyword">type</span> <span class="token class-name">Bools</span> <span class="token operator">=</span> GetReturnType<span class="token operator">&lt;</span><span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>

<span class="token comment">// type Arr=any[]</span>
<span class="token keyword">type</span> <span class="token class-name">Arr</span> <span class="token operator">=</span> GetReturnType<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u4ECE\u4E00\u4E2A\u5177\u6709\u591A\u4E2A\u8C03\u7528\u7B7E\u540D\u7684\u7C7B\u578B\uFF08\u5982\u91CD\u8F7D\u51FD\u6570\u7684\u7C7B\u578B\uFF09\u8FDB\u884C\u63A8\u65AD\u65F6\uFF0C\u4ECE\u6700\u540E\u4E00\u4E2A\u7B7E\u540D\u8FDB\u884C\u63A8\u65AD\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">stringOrNum</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">stringOrNum</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">stringOrNum</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token comment">// type T1 = string | number</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T1</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> stringOrNum<span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>declare</code>\u53EF\u4EE5\u5411<code>TypeScript</code>\u57DF\u4E2D\u5F15\u5165\u4E00\u4E2A\u53D8\u91CF\uFF0C\u8FD9\u53EF\u4EE5\u89E3\u51B3\u5728\u91CD\u8F7D\u51FD\u6570\u53EA\u6709\u91CD\u8F7D\u7B7E\u540D\u800C\u6CA1\u6709\u5B9E\u73B0\u7B7E\u540D\u65F6\u7684\u62A5\u9519</p></blockquote><h3 id="\u{1F4CC}\u5206\u5E03\u5F0F\u6761\u4EF6\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u{1F4CC}\u5206\u5E03\u5F0F\u6761\u4EF6\u7C7B\u578B" aria-hidden="true">#</a> \u{1F4CC}\u5206\u5E03\u5F0F\u6761\u4EF6\u7C7B\u578B</h3><p>\u5F53\u6761\u4EF6\u7C7B\u578B\u4F5C\u7528\u4E8E\u4E00\u4E2A\u901A\u7528\u7C7B\u578B\u65F6\uFF0C\u5F53\u7ED9\u5B9A\u4E00\u4E2A\u8054\u5408\u7C7B\u578B\u65F6\uFF0C\u5B83\u5C31\u53D8\u6210\u4E86\u5206\u5E03\u5F0F\u7684\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ToArray<span class="token operator">&lt;</span>Type<span class="token operator">&gt;</span></span> <span class="token operator">=</span> Type <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">any</span></span> <span class="token operator">?</span> Type<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>
<span class="token comment">// type StrArrOrNumArr = string[] | number[]</span>
<span class="token keyword">type</span> <span class="token class-name">StrArrOrNumArr</span> <span class="token operator">=</span> ToArray<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5C06\u4E00\u4E2A\u8054\u5408\u7C7B\u578B<code>string | number</code>\u63D2\u5165<code>ToArray</code>\uFF0C\u90A3\u4E48\u6761\u4EF6\u7C7B\u578B\u5C06\u88AB\u5E94\u7528\u4E8E\u8BE5\u8054\u5408\u7684\u6BCF\u4E2A\u6210\u5458</p><ul><li><code>StrArrOrNumArr</code>\u5206\u5E03\u5728<code>string | number</code>;</li><li>\u6761\u4EF6\u7C7B\u578B\u4F1A\u5BF9\u8054\u5408\u7684\u6BCF\u4E2A\u6210\u5458\u7C7B\u578B\u8FDB\u884C\u6620\u5C04\uFF1A<code>ToArray&lt;string&gt; | ToArray&lt;number&gt;</code></li><li>\u6700\u7EC8\u8FD4\u56DE<code>string[] | number[]</code></li></ul><p><strong>\u53D6\u6D88\u5206\u5E03\u5F0F\uFF1A</strong></p><p>\u5982\u679C\u4E0D\u9700\u8981\u5206\u5E03\u5F0F\u7684\u8FD9\u79CD\u884C\u4E3A\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528<strong>\u65B9\u62EC\u53F7</strong><code>[]</code>\u5305\u56F4<code>extends</code>\u5173\u952E\u5B57\u7684\u4E24\u8FB9</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ToArray<span class="token operator">&lt;</span>Type<span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">[</span>Type<span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token punctuation">[</span><span class="token builtin">any</span><span class="token punctuation">]</span> <span class="token operator">?</span> Type<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>
<span class="token comment">// type StrArrOrNumArr = (string|number)[]</span>
<span class="token keyword">type</span> <span class="token class-name">StrArrOrNumArr</span> <span class="token operator">=</span> ToArray<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6620\u5C04\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u6620\u5C04\u7C7B\u578B" aria-hidden="true">#</a> \u6620\u5C04\u7C7B\u578B</h2><p>\u5F53\u4E00\u4E2A\u7C7B\u578B\u53EF\u4EE5\u4EE5\u53E6\u4E00\u4E2A\u7C7B\u578B\u4E3A\u57FA\u7840\u521B\u5EFA\u65B0\u7C7B\u578B\u3002</p><p><strong>\u6620\u5C04\u7C7B\u578B</strong>\u5EFA\u7ACB\u5728<strong>\u7D22\u5F15\u7B7E\u540D</strong>\uFF08\u89C1\u3010TypeScript\u3011\u6DF1\u5165\u5B66\u4E60 TypeScript \u5BF9\u8C61\u7C7B\u578B\uFF09\u7684\u8BED\u6CD5\u4E0A</p><p>\u6620\u5C04\u7C7B\u578B\u662F\u4E00\u79CD\u901A\u7528\u7C7B\u578B\uFF0C\u5B83\u4F7F\u7528 <code>PropertyKeys</code> \u7684\u8054\u5408\uFF08\u7ECF\u5E38\u901A\u8FC7<code>keyof</code> \u521B\u5EFA\uFF09\u8FED\u4EE3\u952E\u6765\u521B\u5EFA\u4E00\u4E2A\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">OptionsFlags<span class="token operator">&lt;</span>Type<span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span>Property <span class="token keyword">in</span> <span class="token keyword">keyof</span> Type<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\uFF0C <code>OptionsFlags</code> \u5C06\u4ECE<code>Type</code> \u7C7B\u578B\u4E2D\u83B7\u53D6\u6240\u6709\u5C5E\u6027\uFF0C\u5E76\u5C06\u5B83\u4EEC\u7684\u503C\u7684\u7C7B\u578B\u6539\u4E3A<code>boolean</code>\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Obj</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">FeatureOptions</span> <span class="token operator">=</span> OptionsFlags<span class="token operator">&lt;</span>Obj<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">/*
    type FeatureOptions = {
        name: boolean;
        age: boolean;
    }
    */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u{1F4CC}\u6620\u5C04\u4FEE\u6539\u5668" tabindex="-1"><a class="header-anchor" href="#\u{1F4CC}\u6620\u5C04\u4FEE\u6539\u5668" aria-hidden="true">#</a> \u{1F4CC}\u6620\u5C04\u4FEE\u6539\u5668</h3><p>\u5728\u6620\u5C04\u8FC7\u7A0B\u4E2D\uFF0C\u6709\u4E24\u4E2A\u989D\u5916\u7684\u4FEE\u9970\u7B26\u53EF\u4EE5\u5E94\u7528\uFF1A <code>readonly</code> \u548C<code>?</code> \uFF0C\u5B83\u4EEC\u5206\u522B\u5F71\u54CD\u53EF\u53D8\u6027\u548C\u53EF\u9009\u6027\uFF0C\u53EF\u4EE5\u901A\u8FC7\u7528<code>-</code> \u6216<code>+</code> \u4F5C\u4E3A\u524D\u7F00\u6765\u5220\u9664\u6216\u6DFB\u52A0\u8FD9\u4E9B\u4FEE\u9970\u7B26\uFF08\u4E0D\u52A0\u4FEE\u9970\u7B26\u5C31\u9ED8\u8BA4\u662F<code>+</code> \uFF09\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">OptionsFlags<span class="token operator">&lt;</span>Type<span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5220\u9664readonly\u548C?\uFF0Creadonly\u5728\u524D\uFF0C?\u5728\u540E</span>
    <span class="token operator">-</span><span class="token keyword">readonly</span> <span class="token punctuation">[</span>Property <span class="token keyword">in</span> <span class="token keyword">keyof</span> Type<span class="token punctuation">]</span><span class="token operator">-</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">Obj</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token keyword">readonly</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    age<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">FeatureOptions</span> <span class="token operator">=</span> OptionsFlags<span class="token operator">&lt;</span>Obj<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">/*
    type FeatureOptions = {
        name: boolean;
        age: boolean;
    }
    */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u{1F4CC}\u901A\u8FC7-as-\u505A-key-\u91CD\u6620\u5C04" tabindex="-1"><a class="header-anchor" href="#\u{1F4CC}\u901A\u8FC7-as-\u505A-key-\u91CD\u6620\u5C04" aria-hidden="true">#</a> \u{1F4CC}\u901A\u8FC7 as \u505A key \u91CD\u6620\u5C04</h3><p>\u5728<code>TypeScript 4.1</code>\u53CA\u4EE5\u540E\u7684\u7248\u672C\u4E2D\uFF0C\u53EF\u4EE5\u901A\u8FC7\u6620\u5C04\u7C7B\u578B\u4E2D\u7684<code>as</code>\u5B50\u53E5\u4FEE\u6539\u6620\u5C04\u7C7B\u578B\u4E2D\u7684\u952E\u540D\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">OptionsFlags<span class="token operator">&lt;</span>Type<span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5C06\u952E\u91CD\u547D\u540D\u4E3A\u54E6\u3001</span>
    <span class="token punctuation">[</span>Property <span class="token keyword">in</span> <span class="token keyword">keyof</span> Type <span class="token keyword">as</span> <span class="token string">&quot;o&quot;</span><span class="token punctuation">]</span><span class="token operator">:</span> Type<span class="token punctuation">[</span>Property<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">Obj</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">FeatureOptions</span> <span class="token operator">=</span> OptionsFlags<span class="token operator">&lt;</span>Obj<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">/*
    type FeatureOptions = {
        o:string|number
    }
    */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u662F\u5C06\u6240\u6709\u952E\u540D\u90FD\u66F4\u6539\u6210\u4E86<code>&#39;o&#39;</code></p><p><strong>\u6211\u4EEC\u4E5F\u53EF\u4EE5\u5229\u7528</strong><a href="https://xie.infoq.cn/link?target=https%3A%2F%2Fwww.typescriptlang.org%2Fdocs%2Fhandbook%2F2%2Ftemplate-literal-types.html" target="_blank" rel="noopener noreferrer"><strong>\u6A21\u677F\u5B57\u9762\u7C7B\u578B</strong></a><strong>\uFF0C\u5728\u4E4B\u524D\u7684\u5C5E\u6027\u540D\u79F0\u7684\u57FA\u7840\u4E0A\u8FDB\u884C\u66F4\u6539\uFF1A</strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Getters<span class="token operator">&lt;</span>Type<span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span>Property <span class="token keyword">in</span> <span class="token keyword">keyof</span> Type <span class="token keyword">as</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">get</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Capitalize<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">&amp;</span> Property<span class="token operator">&gt;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Type<span class="token punctuation">[</span>Property<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">interface</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    location<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">/*
    type LazyPerson = {
    getName: () =&gt; string;
    getAge: () =&gt; number;
    getLocation: () =&gt; string;
    }
    */</span>
<span class="token keyword">type</span> <span class="token class-name">LazyPerson</span> <span class="token operator">=</span> Getters<span class="token operator">&lt;</span>Person<span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>Capitalize</code> \u4E3A<code>TS</code>\u5185\u7F6E\u7C7B\u578B\uFF0C\u80FD\u5C06\u4F20\u5165\u7684\u5B57\u7B26\u4E32\u7C7B\u578B\u9996\u5B57\u6BCD\u8F6C\u4E3A\u5927\u5199</li><li><code>string &amp; Property</code>\u901A\u8FC7\u4EA4\u53C9\u7C7B\u578B\uFF0C\u786E\u4FDD<code>Capitalize</code> \u63A5\u6536\u7684\u4E3A\u5B57\u7B26\u4E32\u7C7B\u578B</li></ul><p><strong>\u53EF\u4EE5\u901A\u8FC7\u6761\u4EF6\u7C7B\u578B</strong><code>**Exclude**</code><strong>\u6839\u636E\u952E\u540D\u4EA7\u751F</strong><code>**never**</code> <strong>\uFF0C\u4ECE\u800C\u8FC7\u6EE4\u6389\u8BE5\u952E\uFF1A</strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">RemoveKindField<span class="token operator">&lt;</span>Type<span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span>Property <span class="token keyword">in</span> <span class="token keyword">keyof</span> Type <span class="token keyword">as</span> Exclude<span class="token operator">&lt;</span>Property<span class="token punctuation">,</span> <span class="token string">&quot;kind&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token operator">:</span> Type<span class="token punctuation">[</span>Property<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">Circle</span> <span class="token punctuation">{</span>
    kind<span class="token operator">:</span> <span class="token string">&quot;circle&quot;</span><span class="token punctuation">;</span>
    radius<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/*
    type KindlessCircle = {
        radius: number;
    }
 */</span>
<span class="token keyword">type</span> <span class="token class-name">KindlessCircle</span> <span class="token operator">=</span> RemoveKindField<span class="token operator">&lt;</span>Circle<span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Exclude<code>\u4E3A</code>TS<code>\u5185\u7F6E\u7C7B\u578B\uFF1A</code>type Exclude&lt;T, U&gt; = T extends U ? never : T</p><p><strong>\u53EF\u4EE5\u6620\u5C04\u4EFB\u610F\u7684\u8054\u5408\u4F53\uFF1A</strong></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">EventConfig<span class="token operator">&lt;</span>Events <span class="token keyword">extends</span> <span class="token punctuation">{</span> kind<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token constant">E</span> <span class="token keyword">in</span> Events <span class="token keyword">as</span> <span class="token constant">E</span><span class="token punctuation">[</span><span class="token string">&quot;kind&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">(</span>event<span class="token operator">:</span> <span class="token constant">E</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">SquareEvent</span> <span class="token operator">=</span> <span class="token punctuation">{</span> kind<span class="token operator">:</span> <span class="token string">&quot;square&quot;</span><span class="token punctuation">;</span> x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> y<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">CircleEvent</span> <span class="token operator">=</span> <span class="token punctuation">{</span> kind<span class="token operator">:</span> <span class="token string">&quot;circle&quot;</span><span class="token punctuation">;</span> radius<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">/*
    type Config = {
    square: (event: SquareEvent) =&gt; void;
    circle: (event: CircleEvent) =&gt; void;
    }
    */</span>
<span class="token keyword">type</span> <span class="token class-name">Config</span> <span class="token operator">=</span> EventConfig<span class="token operator">&lt;</span>SquareEvent <span class="token operator">|</span> CircleEvent<span class="token operator">&gt;</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u{1F4CC}\u8FDB\u4E00\u6B65\u63A2\u7D22" tabindex="-1"><a class="header-anchor" href="#\u{1F4CC}\u8FDB\u4E00\u6B65\u63A2\u7D22" aria-hidden="true">#</a> \u{1F4CC}\u8FDB\u4E00\u6B65\u63A2\u7D22</h3><p>\u6620\u5C04\u7C7B\u578B\u4E0E\u672C\u7BC7\u6587\u7AE0\u4E2D\u6307\u51FA\u7684\u5176\u4ED6\u529F\u80FD\u914D\u5408\u5F97\u5F88\u597D\uFF0C\u4F8B\u5982\uFF0C\u4E0B\u9762\u8FD9\u4E2A\u4F7F\u7528\u6761\u4EF6\u7C7B\u578B\u7684\u6620\u5C04\u7C7B\u578B\uFF0C\u5B83\u6839\u636E\u4E00\u4E2A\u5BF9\u8C61\u7C7B\u578B\u7684\u5C5E\u6027<code>show</code>\u662F\u5426\u88AB\u8BBE\u7F6E\u4E3A\u5B57\u9762\u7C7B\u578B<code>true</code>\u800C\u8FD4\u56DE<code>true</code>\u6216<code>false</code>\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ExtractShow<span class="token operator">&lt;</span>Type<span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span>Property <span class="token keyword">in</span> <span class="token keyword">keyof</span> Type<span class="token punctuation">]</span><span class="token operator">:</span> Type<span class="token punctuation">[</span>Property<span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token punctuation">{</span> show<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>
        <span class="token operator">?</span> <span class="token boolean">true</span>
        <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">PermissionInfo</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    home<span class="token operator">:</span> <span class="token punctuation">{</span> url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> show<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    about<span class="token operator">:</span> <span class="token punctuation">{</span> url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> show<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    admin<span class="token operator">:</span> <span class="token punctuation">{</span> url<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">/*
    type judge = {
        home: true;
        about: true;
        admin: false;
    }
*/</span>
<span class="token keyword">type</span> <span class="token class-name">judge</span> <span class="token operator">=</span> ExtractShow<span class="token operator">&lt;</span>PermissionInfo<span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,120),o=[t];function c(l,i){return s(),a("div",null,o)}var u=n(p,[["render",c],["__file","typescript_\u7C7B\u578B\u64CD\u4F5C.html.vue"]]);export{u as default};
